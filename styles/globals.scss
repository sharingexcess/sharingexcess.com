@import '@fortawesome/fontawesome-svg-core/styles.css';
@import '@sharingexcess/designsystem/build/index.scss';
@import './design_system_overrides.scss';

:root {
  --se-min-page-width: 300px;
}

html,
body {
  padding: 0;
  margin: 0;
}

* {
  box-sizing: border-box;
}

body {
  padding: 0;
  margin: 0;
  width: 100vw;
  height: 100vh;
  min-width: var(--se-min-page-width);
  font-size: 16px;
  font-family: var(--font-body);
  background: var(--se-white);
  color: var(--se-black);
  padding: var(--page-margin);
  overflow-y: auto;
  overflow-x: hidden;
  border-radius: 0;
  font-family: var(--font-body), -apple-system, BlinkMacSystemFont, Segoe UI,
    Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue,
    sans-serif;
}

a {
  color: inherit;
  text-decoration: none;
}

* {
  box-sizing: border-box;
}

img,
svg,
video {
  -webkit-user-select: none;
  user-select: none;
  -webkit-user-drag: none;
}

a {
  color: unset;
  text-decoration: unset;
}

@mixin hover {
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      &:not(:disabled) {
        @content;
      }
    }
  }
}

@mixin active {
  &:active {
    &:not(:disabled) {
      @content;
    }
  }
}

@mixin ellipsis {
  overflow: hidden !important;
  white-space: nowrap !important;
  text-overflow: ellipsis !important;
  min-width: 0 !important;
}

@mixin fade-in($time: 0.2s, $delay: 0s) {
  opacity: 0;
  animation: fade-in $time ease forwards $delay;

  @keyframes fade-in {
    to {
      opacity: 1;
    }
  }
}

@mixin slide-in($x: -64px, $y: 0, $time: 1s) {
  opacity: 0;
  transform: translate($x, $y);
  animation: slide-in $time ease forwards;

  @keyframes slide-in {
    to {
      opacity: 1;
      transform: translate(0, 0);
    }
  }
}

@mixin flex-left {
  display: flex;
  justify-content: flex-start;
  align-items: center;
}

@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-right {
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

@mixin flex-vertical-left {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
}

@mixin flex-vertical-center {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

@mixin flex-vertical-right {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-end;
}

@mixin page {
  // Page views should have 144px on top and bottom,
  // and at least 96px on left and right.
  // For large window sizes, we want to constrain the content
  // to the center 1000px. Therefore, our max padding is
  // 50vw - 500px on the left and right,
  // which is half the difference between the
  // window width, and 1000px
  padding: 144px max(96px, calc(50vw - 500px)) 64px
    max(96px, calc(50vw - 500px));
  position: relative;
  @include mobile {
    padding: 96px 16px;
  }
}

@import './components.scss';
